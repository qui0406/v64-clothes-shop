import React, { useState } from 'react';
import { Heart, ShoppingCart, ChevronDown, ChevronUp, MapPin } from 'lucide-react';

const ProductDetailPage = () => {
  const [selectedImage, setSelectedImage] = useState(0);
  const [selectedColor, setSelectedColor] = useState(0);
  const [selectedSize, setSelectedSize] = useState('S');
  const [quantity, setQuantity] = useState(1);
  const [expandedSections, setExpandedSections] = useState({
    standards: false,
    policy: false,
    stores: true
  });

  const product = {
    name: '√Åo S∆° Mi Denim Nam H·ªça Ti·∫øt D·∫≠p Ly Vai √Åo M√†u Xanh Med Blue - Men\'s Medium Blue Denim Shirt With Pleated Shoulders',
    sku: '125MD4049F1',
    msp: '125MD4049F1950S',
    price: 964000,
    status: 'C√≤n h√†ng',
    colors: [
      { name: 'MED BLUE', image: 'https://images.unsplash.com/photo-1596755094514-f87e34085b2c?w=400&h=500&fit=crop' },
      { name: 'DARK BLUE', image: 'https://images.unsplash.com/photo-1624378439575-d8705ad7ae80?w=400&h=500&fit=crop' }
    ],
    sizes: ['S', 'M', 'L', 'XL'],
    images: [
      'https://images.unsplash.com/photo-1596755094514-f87e34085b2c?w=600&h=800&fit=crop',
      'https://images.unsplash.com/photo-1624378439575-d8705ad7ae80?w=600&h=800&fit=crop'
    ],
    description: 'Denim Shirt With Pleated Shoulders ‚Äì "ch√¨a kh√≥a th·ªùi trang" cho c√°c ch√†ng trai mu·ªën kh·∫≥ng ƒë·ªãnh phong c√°ch l·ªãch l√£m, tr·∫ª trung v√† hi·ªán ƒë·∫°i!',
    features: [
      'Thi·∫øt k·∫ø ƒë·∫≠p s√≥ng ly hai b√™n vai, k·∫øt h·ª£p k·ªπ thu·∫≠t wash s√°ng m√†u, l√†m n·ªïi b·∫≠t ch·∫•t li·ªáu denim.',
      'T√∫i h·ªôp c√°ch ƒëi·ªáu tinh t·∫ø, t·∫°o n√©t nam t√≠nh v√† nƒÉng ƒë·ªông.'
    ],
    material: [
      'Khuy b·∫•m kim lo·∫°i ph·ªß hi·ªáu ·ª©ng pearl texture',
      '100% Cotton (7,2 OZ)',
      'V·∫£i Denim m·ªÅm m·ªãn tho√°ng m√°t'
    ],
    madeIn: '* Thi·∫øt k·∫ø v√† s·∫£n xu·∫•t t·∫°i S√†i G√≤n, Vi·ªát Nam.\nCrafted with care by Viet Thang Jean, Vietnam.',
    stores: [
      {
        name: 'H·ªì Ch√≠ Minh',
        address: '38 Quang Trung, Ph∆∞·ªùng Hi·ªáp Ph√∫, Th√†nh ph·ªë Th·ªß ƒê·ª©c',
        hours: 'M·ªü c·ª≠a: 9 gi·ªù 00 - 22 gi·ªù (C√°c ng√†y trong tu·∫ßn)'
      },
      {
        name: 'H·ªì Ch√≠ Minh',
        address: 'T·∫ßng 3 - TTTM Van Hanh Mall, 11 S∆∞ V·∫°n H·∫°nh, Ph∆∞·ªùng 12, Qu·∫≠n 10',
        hours: 'M·ªü c·ª≠a: 9 gi·ªù 00 - 22 gi·ªù (C√°c ng√†y trong tu·∫ßn)'
      }
    ]
  };

  const toggleSection = (section) => {
    setExpandedSections(prev => ({
      ...prev,
      [section]: !prev[section]
    }));
  };

  const formatPrice = (price) => {
    return price.toLocaleString('vi-VN') + 'ƒë';
  };

  const updateQuantity = (delta) => {
    setQuantity(Math.max(1, quantity + delta));
  };

  return (
    <div className="product-page">
      <div className="breadcrumb">
        <a href="#">Trang ch·ªß</a>
        <span>/</span>
        <a href="#">√Åo</a>
        <span>/</span>
        <span>{product.name}</span>
      </div>

      <div className="product-container">
        <div className="product-gallery">
          <div className="main-image">
            <img src={product.images[selectedImage]} alt={product.name} />
          </div>
          <div className="thumbnail-list">
            {product.images.map((img, idx) => (
              <div
                key={idx}
                className={`thumbnail ${selectedImage === idx ? 'active' : ''}`}
                onClick={() => setSelectedImage(idx)}
              >
                <img src={img} alt={`View ${idx + 1}`} />
              </div>
            ))}
          </div>
        </div>

        <div className="product-info">
          <h1 className="product-title">{product.name} - {product.sku}</h1>
          
          <div className="product-price">{formatPrice(product.price)}</div>
          
          <div className="product-meta">
            <div className="meta-item">
              <span className="label">MSP:</span>
              <span className="value">{product.msp}</span>
            </div>
            <div className="meta-item">
              <span className="label">T√¨nh tr·∫°ng:</span>
              <span className="value status-available">{product.status}</span>
            </div>
          </div>

          <div className="product-options">
            <div className="option-group">
              <label>M√†u s·∫Øc: {product.colors[selectedColor].name}</label>
              <div className="color-options">
                {product.colors.map((color, idx) => (
                  <div
                    key={idx}
                    className={`color-option ${selectedColor === idx ? 'selected' : ''}`}
                    onClick={() => setSelectedColor(idx)}
                  >
                    <img src={color.image} alt={color.name} />
                  </div>
                ))}
              </div>
            </div>

            <div className="option-group">
              <label>
                K√≠ch th∆∞·ªõc:
                <a href="#" className="size-guide">üìè H∆∞·ªõng d·∫´n ch·ªçn size</a>
              </label>
              <div className="size-options">
                {product.sizes.map(size => (
                  <button
                    key={size}
                    className={`size-btn ${selectedSize === size ? 'selected' : ''}`}
                    onClick={() => setSelectedSize(size)}
                  >
                    {size}
                  </button>
                ))}
              </div>
            </div>

            <div className="option-group">
              <div className="quantity-actions">
                <div className="quantity-control">
                  <button onClick={() => updateQuantity(-1)}>‚àí</button>
                  <input type="text" value={quantity} readOnly />
                  <button onClick={() => updateQuantity(1)}>+</button>
                </div>
                <button className="btn-add-cart">Th√™m v√†o gi·ªè</button>
                <button className="btn-buy-now">Mua ngay</button>
              </div>
            </div>
          </div>

          <div className="product-description">
            <p className="desc-highlight">{product.description}</p>
            
            <div className="desc-section">
              <h3>ƒêi·ªÉm n·ªïi b·∫≠t:</h3>
              <ul>
                {product.features.map((feature, idx) => (
                  <li key={idx}>- {feature}</li>
                ))}
              </ul>
            </div>

            <div className="desc-section">
              <p className="made-in">{product.madeIn}</p>
            </div>

            <div className="desc-section">
              <h3>Ch·∫•t li·ªáu:</h3>
              <ul>
                {product.material.map((item, idx) => (
                  <li key={idx}>- {item}</li>
                ))}
              </ul>
            </div>
          </div>

          <div className="accordion">
            <div className="accordion-item">
              <button
                className="accordion-header"
                onClick={() => toggleSection('standards')}
              >
                <span>Ti√™u chu·∫©n s·∫£n ph·∫©m</span>
                {expandedSections.standards ? <ChevronUp size={20} /> : <ChevronDown size={20} />}
              </button>
              {expandedSections.standards && (
                <div className="accordion-content">
                  <p>Th√¥ng tin v·ªÅ ti√™u chu·∫©n s·∫£n ph·∫©m...</p>
                </div>
              )}
            </div>

            <div className="accordion-item">
              <button
                className="accordion-header"
                onClick={() => toggleSection('policy')}
              >
                <span>Ch√≠nh s√°ch ƒë·ªïi tr·∫£</span>
                {expandedSections.policy ? <ChevronUp size={20} /> : <ChevronDown size={20} />}
              </button>
              {expandedSections.policy && (
                <div className="accordion-content">
                  <p>Th√¥ng tin v·ªÅ ch√≠nh s√°ch ƒë·ªïi tr·∫£...</p>
                </div>
              )}
            </div>

            <div className="accordion-item">
              <button
                className="accordion-header"
                onClick={() => toggleSection('stores')}
              >
                <span>C√≥ 7 c·ª≠a h√†ng c√≤n s·∫£n ph·∫©m n√†y</span>
                {expandedSections.stores ? <ChevronUp size={20} /> : <ChevronDown size={20} />}
              </button>
              {expandedSections.stores && (
                <div className="accordion-content stores-list">
                  {product.stores.map((store, idx) => (
                    <div key={idx} className="store-item">
                      <div className="store-header">
                        <MapPin size={18} />
                        <strong>{store.name}:</strong>
                      </div>
                      <p className="store-address">{store.address}</p>
                      <p className="store-hours">{store.hours}</p>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        </div>
      </div>

      <style jsx>{`
        * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;
        }

        .product-page {
          max-width: 1400px;
          margin: 0 auto;
          padding: 20px 40px;
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
        }

        .breadcrumb {
          font-size: 14px;
          color: #666;
          margin-bottom: 30px;
        }

        .breadcrumb a {
          color: #666;
          text-decoration: none;
        }

        .breadcrumb a:hover {
          color: #c9a76a;
        }

        .breadcrumb span {
          margin: 0 8px;
        }

        .product-container {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: 60px;
        }

        .product-gallery {
          display: flex;
          gap: 15px;
        }

        .thumbnail-list {
          display: flex;
          flex-direction: column;
          gap: 10px;
        }

        .thumbnail {
          width: 80px;
          height: 100px;
          cursor: pointer;
          border: 2px solid transparent;
          border-radius: 4px;
          overflow: hidden;
          transition: border-color 0.3s;
        }

        .thumbnail.active {
          border-color: #c9a76a;
        }

        .thumbnail img {
          width: 100%;
          height: 100%;
          object-fit: cover;
        }

        .main-image {
          flex: 1;
          background: #f5f5f5;
          border-radius: 8px;
          overflow: hidden;
        }

        .main-image img {
          width: 100%;
          height: 100%;
          object-fit: cover;
        }

        .product-info {
          display: flex;
          flex-direction: column;
          gap: 25px;
        }

        .product-title {
          font-size: 24px;
          font-weight: 600;
          color: #1a1a1a;
          line-height: 1.4;
        }

        .product-price {
          font-size: 28px;
          font-weight: 700;
          color: #c9a76a;
        }

        .product-meta {
          display: flex;
          flex-direction: column;
          gap: 8px;
        }

        .meta-item {
          display: flex;
          gap: 10px;
          font-size: 14px;
        }

        .meta-item .label {
          font-weight: 600;
          color: #333;
        }

        .meta-item .value {
          color: #666;
        }

        .status-available {
          color: #27ae60 !important;
        }

        .product-options {
          display: flex;
          flex-direction: column;
          gap: 25px;
        }

        .option-group {
          display: flex;
          flex-direction: column;
          gap: 12px;
        }

        .option-group label {
          font-size: 15px;
          font-weight: 600;
          color: #333;
          display: flex;
          align-items: center;
          gap: 10px;
        }

        .size-guide {
          font-size: 13px;
          color: #1a3a52;
          text-decoration: none;
          font-weight: normal;
        }

        .color-options {
          display: flex;
          gap: 12px;
        }

        .color-option {
          width: 70px;
          height: 90px;
          border: 2px solid #ddd;
          border-radius: 6px;
          overflow: hidden;
          cursor: pointer;
          transition: all 0.3s;
        }

        .color-option.selected {
          border-color: #c9a76a;
          box-shadow: 0 0 0 1px #c9a76a;
        }

        .color-option img {
          width: 100%;
          height: 100%;
          object-fit: cover;
        }

        .size-options {
          display: flex;
          gap: 10px;
        }

        .size-btn {
          min-width: 60px;
          padding: 12px 20px;
          border: 1px solid #ddd;
          background: white;
          border-radius: 4px;
          cursor: pointer;
          font-size: 14px;
          font-weight: 500;
          transition: all 0.3s;
        }

        .size-btn:hover {
          border-color: #c9a76a;
        }

        .size-btn.selected {
          background: #c9a76a;
          color: white;
          border-color: #c9a76a;
        }

        .quantity-actions {
          display: flex;
          gap: 12px;
          align-items: center;
        }

        .quantity-control {
          display: flex;
          border: 1px solid #ddd;
          border-radius: 4px;
          overflow: hidden;
        }

        .quantity-control button {
          width: 40px;
          height: 48px;
          border: none;
          background: white;
          cursor: pointer;
          font-size: 18px;
          transition: background 0.3s;
        }

        .quantity-control button:hover {
          background: #f5f5f5;
        }

        .quantity-control input {
          width: 60px;
          height: 48px;
          border: none;
          border-left: 1px solid #ddd;
          border-right: 1px solid #ddd;
          text-align: center;
          font-size: 15px;
        }

        .btn-add-cart {
          flex: 1;
          padding: 14px 24px;
          background: #c9a76a;
          color: white;
          border: none;
          border-radius: 4px;
          font-size: 15px;
          font-weight: 600;
          cursor: pointer;
          transition: background 0.3s;
        }

        .btn-add-cart:hover {
          background: #b89660;
        }

        .btn-buy-now {
          padding: 14px 32px;
          background: white;
          color: #333;
          border: 2px solid #c9a76a;
          border-radius: 4px;
          font-size: 15px;
          font-weight: 600;
          cursor: pointer;
          transition: all 0.3s;
        }

        .btn-buy-now:hover {
          background: #c9a76a;
          color: white;
        }

        .product-description {
          padding-top: 20px;
          border-top: 1px solid #e0e0e0;
          display: flex;
          flex-direction: column;
          gap: 20px;
        }

        .desc-highlight {
          font-size: 15px;
          color: #666;
          font-style: italic;
          line-height: 1.6;
        }

        .desc-section h3 {
          font-size: 16px;
          font-weight: 600;
          color: #333;
          margin-bottom: 10px;
        }

        .desc-section ul {
          list-style: none;
          padding: 0;
        }

        .desc-section li {
          font-size: 14px;
          color: #666;
          line-height: 1.8;
          margin-bottom: 5px;
        }

        .made-in {
          font-size: 14px;
          color: #666;
          line-height: 1.6;
          white-space: pre-line;
        }

        .accordion {
          margin-top: 20px;
          border-top: 1px solid #e0e0e0;
        }

        .accordion-item {
          border-bottom: 1px solid #e0e0e0;
        }

        .accordion-header {
          width: 100%;
          padding: 18px 0;
          display: flex;
          justify-content: space-between;
          align-items: center;
          background: none;
          border: none;
          cursor: pointer;
          font-size: 15px;
          font-weight: 600;
          color: #1a3a52;
          text-align: left;
        }

        .accordion-content {
          padding: 0 0 20px;
          font-size: 14px;
          color: #666;
          line-height: 1.6;
        }

        .stores-list {
          display: flex;
          flex-direction: column;
          gap: 20px;
        }

        .store-item {
          padding: 15px;
          background: #f9f9f9;
          border-radius: 6px;
          border-left: 3px solid #c9a76a;
        }

        .store-header {
          display: flex;
          align-items: center;
          gap: 8px;
          margin-bottom: 8px;
          color: #1a3a52;
        }

        .store-address {
          font-size: 14px;
          color: #666;
          margin-bottom: 5px;
        }

        .store-hours {
          font-size: 13px;
          color: #999;
        }

        @media (max-width: 1024px) {
          .product-container {
            grid-template-columns: 1fr;
            gap: 40px;
          }

          .product-gallery {
            flex-direction: column-reverse;
          }

          .thumbnail-list {
            flex-direction: row;
          }
        }

        @media (max-width: 768px) {
          .product-page {
            padding: 15px 20px;
          }

          .quantity-actions {
            flex-wrap: wrap;
          }

          .btn-buy-now {
            width: 100%;
          }
        }
      `}</style>
    </div>
  );
};

export default ProductDetailPage